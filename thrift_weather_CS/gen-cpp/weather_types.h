/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#ifndef weather_TYPES_H
#define weather_TYPES_H

#include <thrift/Thrift.h>
#include <thrift/TApplicationException.h>
#include <thrift/protocol/TProtocol.h>
#include <thrift/transport/TTransport.h>

#include <thrift/cxxfunctional.h>




struct SortMethod {
  enum type {
    Up = 0,
    Down = 1
  };
};

extern const std::map<int, const char*> _SortMethod_VALUES_TO_NAMES;

typedef struct _weather_info__isset {
  _weather_info__isset() : city_id(false), name(false), max_temp(false), min_temp(false) {}
  bool city_id;
  bool name;
  bool max_temp;
  bool min_temp;
} _weather_info__isset;

class weather_info {
 public:

  static const char* ascii_fingerprint; // = "E9A7EEE9A2D27F7A70E08E1F60A257DB";
  static const uint8_t binary_fingerprint[16]; // = {0xE9,0xA7,0xEE,0xE9,0xA2,0xD2,0x7F,0x7A,0x70,0xE0,0x8E,0x1F,0x60,0xA2,0x57,0xDB};

  weather_info() : city_id(), name(), max_temp(0), min_temp(0) {
  }

  virtual ~weather_info() throw() {}

  std::string city_id;
  std::string name;
  int32_t max_temp;
  int32_t min_temp;

  _weather_info__isset __isset;

  void __set_city_id(const std::string& val) {
    city_id = val;
  }

  void __set_name(const std::string& val) {
    name = val;
  }

  void __set_max_temp(const int32_t val) {
    max_temp = val;
  }

  void __set_min_temp(const int32_t val) {
    min_temp = val;
  }

  bool operator == (const weather_info & rhs) const
  {
    if (!(city_id == rhs.city_id))
      return false;
    if (!(name == rhs.name))
      return false;
    if (!(max_temp == rhs.max_temp))
      return false;
    if (!(min_temp == rhs.min_temp))
      return false;
    return true;
  }
  bool operator != (const weather_info &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const weather_info & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(weather_info &a, weather_info &b);



#endif
